#!/usr/bin/ruby
# Format one or more text files with the markdown formatter.
#
#   bluecloth [OPTIONS] [FILES]
#
require 'optparse'
$:.unshift File.expand_path(File.join(File.dirname(__FILE__), '..', 'lib'))
require 'bluecloth'

DocumentWrapper = %{<html>
  <head>
    <title>%s</title>
  </head>
  <body>
    %s
  </body>
</html>}

begin
	document = false
	destination = '.'

	ARGV.options do |oparser|

		oparser.banner = "Usage: $0 [OPTIONS] FILES"

		# Debug mode
		oparser.on( "--debug", "-d", TrueClass, "Turn debugging output on" ) {
			$DEBUG = true
		}

		# Document mode
		oparser.on( "--document", "-c", TrueClass,
			"Wrap resulting HTML creating a basic HTML document" ) {
			document = true
		}

		# Output destination
		#oparser.on( "--output=DESTINATION", "-o DESTINATION", String,
		#	"Write output to DESTINATION instead of the current directory" ) {|arg|
		#	destination = arg
		#}

		oparser.parse!
	end

	# Filter mode if no arguments
	ARGV.push( "-" ) if ARGV.empty?

	ARGV.each do |file|
		contents = if file == '-'
        $stdin.read
      else
        File::read file
      end

		bc = BlueCloth::new contents
    html = bc.to_html

		out = unless document
			html
		else
			DocumentWrapper % [
        file,
        html.gsub("\n", "\n    ") # indent 4 spaces
      ]
		end

    $stdout.puts out
  end

rescue => err
	$stderr.puts "Aborting: Fatal error: %s" % err.message
	exit 255
end
